/*
Copyright 2018 The Vitess Authors
 Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
     http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreedto in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file contains vitess cluster manager related data structures.

syntax = "proto3";
option go_package = "vitess.io/vitess/go/vt/proto/clustermanagerdata";

option java_package="io.vitess.proto";

import "topodata.proto";

package clustermanagerdata;

// SetShardConfigRequest is the payload for SetShardConfigRequest
message SetShardConfigRequest {
  string cell = 1;
  string keyspace = 2;
  string shard = 3;
  topodata.TabletType tablet_type = 4;
  // number of nodes desired for (keyspace/shard/cell/tablet_type)
  int32 nodes = 5;
}

// DeleteShardConfigRequest is the payload for DeleteShardConfig
message DeleteShardConfigRequest{
  string cell = 1;
  string keyspace = 2;
  string shard = 3;
  string tablet_type = 4;
}

// DeleteShardConfigResponse is the returned value for DeleteShardConfigRequest.
message DeleteShardConfigResponse{}

// GetClustrConfigRequest is the payload for GetClusterConfig.
message GetClusterConfigRequest{
  // cell is optional
  string cell = 1;
  // keyspace is optional, if cell is provided
  string keyspace = 2;
  // shard is optional, if cell/keyspace is provided
  string shard = 3;
  // tablet_type is optional, if cell/keyspace/shard are provided
  string tablet_type = 4;
}

// ClusterConfig defines the configuration for a vitess cluster.
message ClusterConfig{
  map<string, CellConfig> cells = 1;
}

// CellConfig defines cluster configuration for cells.
message CellConfig {
  map<string, KeyspaceConfig> keyspaces = 1;
}

// KeyspaceConfig defines cluster configuration for keyspaces.
message KeyspaceConfig {
  map <string, ShardConfig> shards = 1;
}

// ShardConfig defines cluster configuration for a shard.
message ShardConfig {
  map <string, TabletTypeConfig> tablet_types = 1;
}

// TabletTypeConfig defines how many nodes are desired for a tablet a type.
message TabletTypeConfig {
  int32 nodes = 1;
}

