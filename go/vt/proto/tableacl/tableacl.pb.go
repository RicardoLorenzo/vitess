// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tableacl.proto

/*
Package tableacl is a generated protocol buffer package.

It is generated from these files:
	tableacl.proto

It has these top-level messages:
	TableGroupCallerIDSecretSpec
	TableGroupSpec
	Config
*/
package tableacl

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// TableGroupCallerIDSecretSpec
type TableGroupCallerIDSecretSpec struct {
	CallerId string `protobuf:"bytes,1,opt,name=caller_id,json=callerId" json:"caller_id,omitempty"`
	Secret   string `protobuf:"bytes,2,opt,name=secret" json:"secret,omitempty"`
}

func (m *TableGroupCallerIDSecretSpec) Reset()                    { *m = TableGroupCallerIDSecretSpec{} }
func (m *TableGroupCallerIDSecretSpec) String() string            { return proto.CompactTextString(m) }
func (*TableGroupCallerIDSecretSpec) ProtoMessage()               {}
func (*TableGroupCallerIDSecretSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TableGroupCallerIDSecretSpec) GetCallerId() string {
	if m != nil {
		return m.CallerId
	}
	return ""
}

func (m *TableGroupCallerIDSecretSpec) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

// TableGroupSpec defines ACLs for a group of tables.
type TableGroupSpec struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// either tables or a table name prefixes (if it ends in a %)
	TableNamesOrPrefixes []string                        `protobuf:"bytes,2,rep,name=table_names_or_prefixes,json=tableNamesOrPrefixes" json:"table_names_or_prefixes,omitempty"`
	Readers              []string                        `protobuf:"bytes,3,rep,name=readers" json:"readers,omitempty"`
	Writers              []string                        `protobuf:"bytes,4,rep,name=writers" json:"writers,omitempty"`
	Admins               []string                        `protobuf:"bytes,5,rep,name=admins" json:"admins,omitempty"`
	CallerIdSecrets      []*TableGroupCallerIDSecretSpec `protobuf:"bytes,6,rep,name=caller_id_secrets,json=callerIdSecrets" json:"caller_id_secrets,omitempty"`
}

func (m *TableGroupSpec) Reset()                    { *m = TableGroupSpec{} }
func (m *TableGroupSpec) String() string            { return proto.CompactTextString(m) }
func (*TableGroupSpec) ProtoMessage()               {}
func (*TableGroupSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TableGroupSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TableGroupSpec) GetTableNamesOrPrefixes() []string {
	if m != nil {
		return m.TableNamesOrPrefixes
	}
	return nil
}

func (m *TableGroupSpec) GetReaders() []string {
	if m != nil {
		return m.Readers
	}
	return nil
}

func (m *TableGroupSpec) GetWriters() []string {
	if m != nil {
		return m.Writers
	}
	return nil
}

func (m *TableGroupSpec) GetAdmins() []string {
	if m != nil {
		return m.Admins
	}
	return nil
}

func (m *TableGroupSpec) GetCallerIdSecrets() []*TableGroupCallerIDSecretSpec {
	if m != nil {
		return m.CallerIdSecrets
	}
	return nil
}

type Config struct {
	TableGroups []*TableGroupSpec `protobuf:"bytes,1,rep,name=table_groups,json=tableGroups" json:"table_groups,omitempty"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Config) GetTableGroups() []*TableGroupSpec {
	if m != nil {
		return m.TableGroups
	}
	return nil
}

func init() {
	proto.RegisterType((*TableGroupCallerIDSecretSpec)(nil), "tableacl.TableGroupCallerIDSecretSpec")
	proto.RegisterType((*TableGroupSpec)(nil), "tableacl.TableGroupSpec")
	proto.RegisterType((*Config)(nil), "tableacl.Config")
}

func init() { proto.RegisterFile("tableacl.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x46, 0x49, 0x5b, 0x63, 0x33, 0x95, 0x8a, 0x8b, 0xe8, 0x82, 0x1e, 0x42, 0x0e, 0x92, 0x53,
	0x0f, 0x8a, 0x27, 0x8f, 0x55, 0xa4, 0x17, 0x95, 0xc4, 0x7b, 0xd8, 0x26, 0xd3, 0x12, 0x48, 0x93,
	0x30, 0xbb, 0xa2, 0xff, 0xdd, 0x8b, 0xec, 0xec, 0x26, 0x5e, 0xc4, 0xdb, 0xbe, 0x79, 0x93, 0x8f,
	0x99, 0x09, 0x2c, 0x8d, 0xda, 0x36, 0xa8, 0xca, 0x66, 0xd5, 0x53, 0x67, 0x3a, 0x31, 0x1f, 0x38,
	0xc9, 0xe1, 0xfa, 0xdd, 0xbe, 0x9f, 0xa9, 0xfb, 0xe8, 0xd7, 0xaa, 0x69, 0x90, 0x36, 0x8f, 0x39,
	0x96, 0x84, 0x26, 0xef, 0xb1, 0x14, 0x57, 0x10, 0x95, 0x5c, 0x2d, 0xea, 0x4a, 0x06, 0x71, 0x90,
	0x46, 0xd9, 0xdc, 0x15, 0x36, 0x95, 0xb8, 0x80, 0x50, 0x73, 0xab, 0x9c, 0xb0, 0xf1, 0x94, 0x7c,
	0x07, 0xb0, 0xfc, 0x4d, 0xe5, 0x1c, 0x01, 0xb3, 0x56, 0x1d, 0xd0, 0x47, 0xf0, 0x5b, 0xdc, 0xc3,
	0x25, 0xcf, 0x51, 0x58, 0xd2, 0x45, 0x47, 0x45, 0x4f, 0xb8, 0xab, 0xbf, 0x50, 0xcb, 0x49, 0x3c,
	0x4d, 0xa3, 0xec, 0x9c, 0xf5, 0x8b, 0xb5, 0xaf, 0xf4, 0xe6, 0x9d, 0x90, 0x70, 0x4c, 0xa8, 0x2a,
	0x24, 0x2d, 0xa7, 0xdc, 0x36, 0xa0, 0x35, 0x9f, 0x54, 0x1b, 0x6b, 0x66, 0xce, 0x78, 0xb4, 0x93,
	0xaa, 0xea, 0x50, 0xb7, 0x5a, 0x1e, 0xb1, 0xf0, 0x24, 0x32, 0x38, 0x1b, 0xd7, 0x2b, 0xdc, 0xf4,
	0x5a, 0x86, 0xf1, 0x34, 0x5d, 0xdc, 0xde, 0xac, 0xc6, 0xa3, 0xfd, 0x77, 0xa1, 0xec, 0x74, 0x38,
	0x87, 0xab, 0xe9, 0xe4, 0x09, 0xc2, 0x75, 0xd7, 0xee, 0xea, 0xbd, 0x78, 0x80, 0x13, 0xb7, 0xe0,
	0xde, 0x7e, 0xab, 0x65, 0xc0, 0xc1, 0xf2, 0xaf, 0x60, 0x8e, 0x5a, 0x98, 0x91, 0xf5, 0x36, 0xe4,
	0x5f, 0x75, 0xf7, 0x13, 0x00, 0x00, 0xff, 0xff, 0xf4, 0x7f, 0x49, 0x7b, 0xbc, 0x01, 0x00, 0x00,
}
